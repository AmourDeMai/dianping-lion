<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Config">
	<typeAlias alias="Config" type="com.dianping.lion.entity.Config" />
	<typeAlias alias="ConfigStatus" type="com.dianping.lion.entity.ConfigStatus" />
	<typeAlias alias="ConfigInstance" type="com.dianping.lion.entity.ConfigInstance" />

	<resultMap id="ConfigResult" class="Config">
		<result column="id" property="id"/>
		<result column="key" property="key"/>
		<result column="desc" property="desc"/>
		<result column="type" property="type"/>
		<result column="projectId" property="projectId"/>
		<result column="createUserId" property="createUserId"/>
		<result column="modifyUserId" property="modifyUserId"/>
		<result column="createTime" property="createTime"/>
		<result column="modifyTime" property="modifyTime"/>
		<result column="isDel" property="deleted"/>
		<result column="seq" property="seq"/>
	</resultMap>
	
	<resultMap id="ConfigInstanceResult" class="ConfigInstance">
		<result column="id" property="id"/>
		<result column="configId" property="configId"/>
		<result column="envId" property="envId"/>
		<result column="value" property="value"/>
		<result column="createUserId" property="createUserId"/>
		<result column="modifyUserId" property="modifyUserId"/>
		<result column="createTime" property="createTime"/>
		<result column="modifyTime" property="modifyTime"/>
		<result column="isDel" property="deleted"/>
	</resultMap>
	
	<select id="findConfigsByProject" resultMap="ConfigResult" parameterClass="map">
		SELECT *
		FROM config
		WHERE projectId = #projectId# 
		<isEqual property="includeDeleted" compareValue="false">
			and isDel = 0
		</isEqual>
		ORDER BY seq, id
		
    </select>
    
    <select id="findInstancesByProjectAndEnv" resultMap="ConfigInstanceResult" parameterClass="map">
		SELECT i.*
		FROM config c inner join config_instance i on c.id = i.configId
		WHERE c.projectId = #projectId# AND i.envId = #envId#
		<isEqual property="includeDeleted" compareValue="false">
			AND c.isDel = 0 AND i.isDel = 0
		</isEqual>
		ORDER BY c.seq, c.id
    </select>
    
    <select id="findInstance" resultMap="ConfigInstanceResult" parameterClass="map">
    	SELECT *
    	FROM config_instance
    	WHERE configId = #configId# AND envId = #envId#
    	<isNotNull property="context"> AND context = #context#</isNotNull>
    	<isNull property="context"> AND context is null</isNull>
    	<isNull property="includeDeleted"> AND isDel = 0</isNull>
    	<isNotNull property="includeDeleted"> AND isDel = #includeDeleted#</isNotNull>
    </select>
    
    <select id="findDefaultInstances" resultMap="ConfigInstanceResult" parameterClass="map">
    	SELECT i.*
    	FROM config c inner join config_instance i on c.id = i.configId
    	WHERE c.projectId = #projectId# AND i.envId = #envId# AND i.context is null
    	<isEqual property="includeDeleted" compareValue="false">
			and c.isDel = 0 and i.isDel = 0
		</isEqual>
		ORDER BY c.seq, c.id
    </select>
    
    <select id="findHasInstanceConfigs" resultClass="int" parameterClass="map">
    	SELECT DISTINCT c.id
    	FROM config c inner join config_instance i on c.id = i.configId
    	WHERE c.projectId = #projectId# AND i.envId = #envId# AND c.isDel = 0 AND i.isDel = 0
    </select>
    
    <select id="findHasContextInstConfigs" resultClass="int" parameterClass="map">
    	SELECT DISTINCT c.id
    	FROM config c inner join config_instance i on c.id = i.configId
    	WHERE c.projectId = #projectId# AND i.envId = #envId# AND i.context is not null AND c.isDel = 0 AND i.isDel = 0
    </select>
    
    <select id="findConfigStatuses" resultClass="ConfigStatus" parameterClass="map">
    	SELECT s.* 
    	FROM config c inner join config_status s on c.id = s.configId
    	WHERE c.projectId = #projectId# AND s.envId = #envId#
    </select>
    
    <select id="getConfig" resultMap="ConfigResult" parameterClass="map">
    	SELECT * 
    	FROM config 
    	WHERE id = #configId#
    	<isEqual property="includeDeleted" compareValue="false">
			and isDel = 0
		</isEqual>
    </select>
    
    <select id="findConfigByKey" resultMap="ConfigResult" parameterClass="string">
    	SELECT * FROM config WHERE `key` = #key# AND isDel = 0
    </select>
    
    <select id="getNextConfig" resultMap="ConfigResult" parameterClass="int">
    	SELECT c2.*
    	FROM config c1 INNER JOIN config c2 ON c1.projectId = c2.projectId
    	WHERE c1.id = #configId# AND c2.seq > c1.seq AND c2.isDel = 0
    	ORDER BY c2.seq, c2.id
    	LIMIT 1 
    </select>
    
    <select id="getMaxSeq" resultClass="int" parameterClass="int">
    	SELECT MAX(seq) FROM config WHERE projectId = #projectId#
    </select>
    
    <select id="getPrevConfig" resultMap="ConfigResult" parameterClass="int">
    	<![CDATA[
    	SELECT c2.*
    	FROM config c1 INNER JOIN config c2 ON c1.projectId = c2.projectId
    	WHERE c1.id = #configId# AND c2.seq < c1.seq AND c2.isDel = 0
    	ORDER BY c2.seq desc, c2.id desc
    	LIMIT 1 
    	]]>
    </select>
    
    <update id="updateConfig" parameterClass="Config">
    	UPDATE config
    	SET `desc` = #desc#, type = #type#, modifyUserId = #modifyUserId#, modifyTime = #modifyTime#, isDel = #deleted#, seq = #seq#
    	WHERE id = #id#
    </update>
    
    <update id="deleteConfig" parameterClass="map">
    	UPDATE config
    	SET isDel = 1, modifyUserId = #currentUser#, modifyTime = NOW()
    	WHERE id = #configId# AND isDel = 0
    </update>
    
    <insert id="insertConfig" parameterClass="Config">
    	INSERT INTO config(`key`, `desc`, type, projectId, createUserId, modifyUserId, createTime, modifyTime, isDel, seq)
    	VALUES(#key#, #desc#, #type#, #projectId#, #createUserId#, #modifyUserId#, NOW(), NOW(), #deleted#, #seq#)
    	<selectKey resultClass="int">    
            SELECT LAST_INSERT_ID() AS ID
        </selectKey> 
    </insert>
    
    <insert id="insertInstance" parameterClass="ConfigInstance">
    	INSERT INTO config_instance(configId, envId, value, context, createUserId, modifyUserId, createTime, modifyTime, isDel, remark)
    	VALUES(#configId#, #envId#, #value#, #context#, #createUserId#, #modifyUserId#, NOW(), NOW(), #deleted#, #remark#)
    	<selectKey resultClass="int">    
            SELECT LAST_INSERT_ID() AS ID
        </selectKey> 
    </insert>
    
    <update id="deleteInstance" parameterClass="map">
    	UPDATE config_instance
    	SET isDel = 1, modifyUserId = #currentUser#, modifyTime = NOW()
    	WHERE configId = #configId# <isNotNull property="envId"> AND envId = #envId#</isNotNull> AND isDel = 0
    </update>
    
    <delete id="deleteStatus" parameterClass="map">
	    DELETE FROM config_status
	    WHERE configId = #configId# <isNotNull property="envId"> AND envId = #envId#</isNotNull>
    </delete>
    
</sqlMap>